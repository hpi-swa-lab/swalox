// based on https://github.com/smarr/are-we-fast-yet/blob/master/benchmarks/JavaScript/harness.js

// This code is derived from the SOM benchmarks, see AUTHORS.md file.
//
// Copyright (c) 2015-2016 Stefan Marr <git@stefan-marr.de>
// Copyright (c) 2024 Jens Lincke  Sotware Architecture Group, Hasso-Plattner-Institute
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

load("run.lox");
  
fun processArguments(args) {
    var run = Run(args[0]);

    if (args.length > 1) {
        run.numIterations = Number(args[1]);
        if (args.length > 2) {
            run.innerIterations = Number(args[2]);
        }
    }
    return run;
}

fun printUsage() {
    print "harness.lox [benchmark] [num-iterations [inner-iter]]";
    print "";
    print "  benchmark      - benchmark class name";
    print "  num-iterations - number of times to execute benchmark, default: 1";
    print "  inner-iter     - number of times the benchmark is executed in an inner loop,";
    print "                   which is measured in total, default: 1";
}

var args = ARGV;

if (args.length < 1) {
    printUsage();
    return nil;
}

var run = processArguments(args);
run.runBenchmark();
run.printTotal();

