load("benchmark.lox");

class A {
    m() {
        return this.value;
    }
}

// long chain of inheritance
class C1 < A {
    
}

class C2 < C1 {
    
}

class C3 < C2 {
    
}

class C4 < C3 {
    
}


class C5 < C4 {
    
}

class C6 < C5 {
    
}


class C7 < C6 {
    
}

class C8 < C7 {
    
}

class B < C8 {
    init(value) {
        this.value = value;
    }
}

class Methods < Benchmark {
    init() {
        super.init();
        this.object = B(true);
    }

    call(o) {
        return o.m();
    }

    benchmark() {
        var result = true;
        for (var i = 0; i < 1000; i = i + 1) {
            result = result and this.call(this.object);
        }
        return result;
    }

    verifyResult(result) {
        return result;
    }
}

return Methods();
