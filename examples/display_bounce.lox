var Math = lookup("java", "java.lang.Math");
var Color = lookup("java", "java.awt.Color");
var LoxDisplay = lookup("java", "de.hpi.swa.lox.runtime.LoxDisplay");

var xLimit = 1000;
var yLimit = 1000;

class Ball {
  init() {
    this.x = Math.random() * xLimit;
    this.y = Math.random() * yLimit;
    this.xVel = (Math.random() * 30) - 15;
    this.yVel = (Math.random() * 30) - 15;
  }

  bounce() {
    var bounced = false;
    var factor = 0.1;

    this.x = this.x + factor * this.xVel;
    this.y = this.y + factor * this.yVel;

    if (this.x > xLimit) {
      this.x = xLimit; 
      this.xVel = 0 - Math.abs(this.xVel); 
      bounced = true;
    }
    if (this.x < 0) {
      this.x = 0; 
      this.xVel = Math.abs(this.xVel); 
      bounced = true;
    }
    if (this.y > yLimit) {
      this.y = yLimit; 
      this.yVel = 0 - Math.abs(this.yVel); 
      bounced = true;
    }
    if (this.y < 0) {
      this.y = 0; 
      this.yVel = Math.abs(this.yVel); 
      bounced = true;
    }
    return bounced;
  }
}

class Bounce  {
  run() {
    this.setupDisplay();
    var ballCount = 1000;
    var bounces = 0;
    var balls = [];
    this.balls = balls;
    var i = 0;

    for (i = 0; i < ballCount; i = i + 1) {
      balls[i] = Ball();
    }

    while(true) {
        for (var j = 0; j < balls.length; j = j + 1) {
            var ball = balls[j];  
            if (ball.bounce()) {
                bounces = bounces + 1;
            }
        }
        this.display.panel.repaint();
    }
  }
  paint(graphics2D) {
    graphics2D.setColor(Color.BLUE);
    for (var j = 0; j < this.balls.length; j = j + 1) {
        var ball = this.balls[j]; 
        graphics2D.fillOval(round(ball.x), round(ball.y), 5, 5); 
    }
  }

  setupDisplay()  {
    this.display = LoxDisplay.create();
    this.display.paint = this.paint;
    this.display.frame.setSize(xLimit, yLimit);
  }
}

Bounce().run();


